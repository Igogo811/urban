# Urban решил устроить соревнования между студентами по бегу, ибо сидячий образ
# жизни ни к чему хорошему не приведёт.
# Некоторые участники упорно готовились к нему, а некоторые даже вебинары не посещали
# по пройденным модулям. Вот и получилось, что некоторые на соревнованиях бегали и выигрывали,
# а кто просто ходил по дистанции, те проигрывали.
#
# Подготовить файлы проекта, предварительно клонировав их с GitHub себе в проект -
# https://github.com/yanchuki/HumanMoveTest.git. В загруженном проекте находится модуль main с классом Student; объектами этого класса вам и нужно будет управлять и тестировать их.
# Создайте в отдельном модуле класс для тестирования (наследованный от TestCase).
# Напишите 3 теста, где будут создаваться отдельные объекты класса Student:
# Первый тест: у одного объекта должен запускать метод walk 10 раз, после чего должен возвращаться результат сравнения полученных данных. В  случае провального теста должно выводится сообщение: Дистанции не равны [дистанция человека(объекта)] != 500
# Второй тест: у одного объекта должен запускать метод run 10 раз, после чего должен возвращаться результат сравнения полученных данных. В  случае провального теста должно выводится сообщение: Дистанции не равны [дистанция человека(объекта)] != 1000
# Третий тест: 2 объекта "соревнуются", один "бежит", другой "идёт" (тот самый студент, кто не посещает вебинары). После чего должен возвращаться результат сравнения полученных данных. В  случае провального теста должно выводится сообщение: [бегущий человек] должен преодолеть дистанцию больше, чем [идущий человек].
#
# Рекомендуемые методы для тестирования:
# assertEqual, assertGreather, assertLess

import unittest
from Student import Student

class StudentTest(unittest.TestCase):

    def setUp(self):
        self.student_1 = Student(name='Данияр')
        self.student_2 = Student(name='Кайлас')

    def test_run(self):
        for i in range(10):
            self.student_2.run()
        self.assertEqual(self.student_2.distance, 100,
                         msg=f'Дистанции не равны, дистанция {self.student_2}а {self.student_2.distance} != 1000')

    def test_walk(self):
        for i in range(10):
            self.student_1.walk()
        self.assertEqual(self.student_1.distance, 50,
                         msg=f'Дистанции не равны, дистанция {self.student_1}а {self.student_1.distance} != 500')

    def test_races(self):
        for i in range(20):
            self.student_1.walk()
            for i in range(10):
                self.student_2.run()
        self.assertLess(self.student_1.distance, self.student_2.distance,
                        msg=f'{self.student_2} бегущий, должен преодолеть дистанцию больше, чем идущий {self.student_1}')

if __name__ == '__main__':
    unittest.main()
